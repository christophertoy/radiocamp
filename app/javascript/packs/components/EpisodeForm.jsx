import React, { useState, useEffect } from 'react';
import { Grid, 
  TextField, 
  makeStyles,   
  Select, 
  FormControl,
  InputLabel,
  MenuItem,
  Button
 } from "@material-ui/core";

 const jsonShows = [
  {
    id: 1,
    name: "Modern Expansion",
    description: null,
    image: null,
    genre: null,
    broadcaster_id: 1,
    created_at: "2020-10-25T20:36:31.152Z",
    updated_at: "2020-10-25T20:36:31.152Z",
    url: "http://localhost:3000/shows/1.json"
  },
  {
    id: 2,
    name: "Contemporary Few",
    description: null,
    image: null,
    genre: null,
    broadcaster_id: 1,
    created_at: "2020-10-25T20:36:31.168Z",
    updated_at: "2020-10-25T20:36:31.168Z",
    url: "http://localhost:3000/shows/2.json"
  },
  {
    id: 3,
    name: "Syntactic Yacht",
    description: null,
    image: null,
    genre: null,
    broadcaster_id: 2,
    created_at: "2020-10-25T20:36:31.177Z",
    updated_at: "2020-10-25T20:36:31.177Z",
    url: "http://localhost:3000/shows/3.json"
  },
  {
    id: 4,
    name: "Robots in Plain Sight",
    description: null,
    image: null,
    genre: null,
    broadcaster_id: 1,
    created_at: "2020-10-25T20:36:31.152Z",
    updated_at: "2020-10-25T20:36:31.152Z",
    url: "http://localhost:3000/shows/1.json"
  }
 ];

const useStyle = makeStyles(theme => ({
  root: {
    // this is a selector based on class name generated by Mui
    '& .MuiFormControl-root': {
      width: '80%',
      margin: theme.spacing(1)
    }
  }
}));

// dummy placeholder function
const getShows = () => {
  // there will need to be a call to API here to stage show data

  return jsonShows.map(show => show.name);
}
  


const initialValues = {
  id: null,
  showName: "",
  title: "",
  description: "",
  episode_url: "",
  release_date: "2020-10-31"
};

export default function EpisodeForm() {

  const [values, setValues] = useState(initialValues);
  const classes = useStyle();

  const handleInputChange = (event) => {
    const { name, value } = event.target;
    setValues({
      ...values,
      [name]:value
    })
  }

  return (
    <form className = {classes.root}>
      <Grid container>
        
        <Grid item xs={6}>
          <FormControl className={classes.formControl}>
            <InputLabel id="demo-simple-select-label">Show</InputLabel>
              <Select
                variant="outlined"
                name="showName"
                labelId="demo-simple-select-label"
                id="demo-simple-select"
                value={values.showName}
                onChange={handleInputChange}
                // options={getShows()}
              >
                <MenuItem value="Choose a Show"></MenuItem>
                {
                  getShows().map(show => 
                  <MenuItem value={show}>{show}</MenuItem>)
                }
              </Select>
          </FormControl>
        
          <TextField
            variant="outlined"
            label="Title"
            name="title"
            value={values.title}
            onChange={handleInputChange}
          />          
          <TextField
            variant="outlined"
            label="Description"
            multiline
            rows={4}
            name="description"
            value={values.description}
            onChange={handleInputChange}
          />
          <TextField
            variant="outlined"
            label="Episode URL"
            name="episode_url"
            value={values.episode_url}
            onChange={handleInputChange}
          />          
          <TextField
            variant="outlined"
            label="Release Date"
            name="release_date"
            type="date"
            value={values.release_date}
            onChange={handleInputChange}
          />
          <Button>Upload Episode</Button>
        </Grid>
        <Grid item xs={6}></Grid>
      </Grid>

    </form>
  )
}